[project]
name = "simple-mpc"
version = "0.1"
channels = ["conda-forge"]
description = "MPC schemes for locomotion"
platforms = ["linux-64", "osx-arm64"]
license = "BSD-2-Clause"
license-file = "LICENSE"
readme = "README.md"

[build-dependencies]
ccache = ">=4.9.1"
cmake = ">=3.10"
cxx-compiler = ">=1.7.0"
ninja = ">=1.11"
pkg-config = ">=0.29.2"

[dependencies]
libboost-python-devel = ">=1.80.0"
python = "3.11"
eigenpy = ">=3.10.1"
aligator = ">=0.15"
proxsuite = ">=0.7.2"
benchmark = ">=1.8.0"
pytest = ">=8.3.0"
matplotlib = ">=3.9"
tsid = ">=1.9.0,<2"

[activation]
scripts = ["build_scripts/pixi/activation.sh"]

[tasks]
clean = { cmd = "rm -rf build" }

[tasks.configure]
args = [{ "arg" = "buildtype", "default" = "Release" }]
cmd = "CXXFLAGS=$ALIGATOR_CXX_FLAGS cmake -G Ninja -B build -S . -DCMAKE_BUILD_TYPE={{buildtype}} -DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX -DBUILD_TESTING=ON -DGENERATE_PYTHON_STUBS=ON -DCMAKE_CXX_COMPILER_LAUNCHER=ccache"

[tasks.build]
args = [{ "arg" = "buildtype", "default" = "Release" }]
cmd = "cmake --build build --target all"
depends-on = [{"task" = "configure", "args" = [{ "buildtype" = "{{buildtype}}" }] }]

[tasks.test]
cmd = "ctest --test-dir build --output-on-failure"
depends-on = [{"task" = "build", "args" = [{ "buildtype" = "Debug" }] }]

[feature.lint]
dependencies = { pre-commit = ">=3.6.2" }
tasks = { lint = { cmd = "pre-commit run --all" } }

[feature.py311.dependencies]
python = "3.11.*"

# Use clang on GNU/Linux.
# We must use scripts instead of env to setup CC and CXX
# to avoid cxx-compiler to overwrite them.
[feature.clang]
platforms = ["linux-64"]
activation = { scripts = ["build_scripts/pixi/activation_clang.sh"] }
dependencies = { clangxx = "*" }

[environments]
default = { features = ["py311"], solve-group = "py311" }
clang = { features = ["clang", "py311"] }
lint = { features = ["lint"], solve-group = "py311" }
all = { features = [], solve-group = "py311" }
